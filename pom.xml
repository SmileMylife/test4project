<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.asiainfo</groupId>
    <artifactId>test4project</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-version>4.2.3.RELEASE</spring-version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6.1</version>
        </dependency>
        <!--junit -->
        <dependency>
            <groupId>com.cmos</groupId>
            <artifactId>cmos-esbclient</artifactId>
            <version>0.6.9-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.cmos</groupId>
            <artifactId>cmos-core</artifactId>
            <version>0.6.7.4-SNAPSHOT</version>
        </dependency>

        <!--logger 0.6.7.4 日志集成方案 -->
        <dependency>
            <groupId>com.cmos</groupId>
            <artifactId>cmos-logger</artifactId>
            <version>1.2.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.cmos</groupId>
            <artifactId>cmos-exception</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.6.0</version>
        </dependency>

        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <classifier>jdk15</classifier>
            <version>2.4</version>
        </dependency>
        <!--servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.3</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <!-- dubbo&zk依赖 -->
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.20.0-GA</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>dubbo</artifactId>
            <version>2.5.4</version>
        </dependency>

        <dependency>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
            <version>3.4.6</version>
        </dependency>

        <dependency>
            <groupId>com.github.sgroschupf</groupId>
            <artifactId>zkclient</artifactId>
            <version>0.1</version>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>

        <!--CSF -->
        <dependency>
            <groupId>com.cmos</groupId>
            <artifactId>csf-client</artifactId>
            <version>2.0.0-SNAPSHOT</version>
        </dependency>
        <!--FTPClient -->
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>2.2</version>
        </dependency>
        <!--缓存 -->
        <dependency>
            <groupId>com.cmos</groupId>
            <artifactId>cmos-cache</artifactId>
            <version>1.3.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>1.6.2</version>
        </dependency>

        <!-- oNest -->
        <dependency>
            <groupId>com.cmos</groupId>
            <artifactId>cmos-onest</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.redisson</groupId>
            <artifactId>redisson</artifactId>
            <version>2.9.1</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>2.22.1</version> <!-- Make sure the Jersey matches
                                 the one you are currently using -->
        </dependency>
        <dependency>
            <groupId>xom</groupId>
            <artifactId>xom</artifactId>
            <version>1.2.5</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>4.3.7.RELEASE</version>
            <scope>test</scope>
        </dependency>

        <!-- poi -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.13</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.13</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml-schemas</artifactId>
            <version>3.13</version>
        </dependency>

        <!-- ffmpeg -->
        <dependency>
            <groupId>net.bramp.ffmpeg</groupId>
            <artifactId>ffmpeg</artifactId>
            <version>0.6.1</version>
        </dependency>
        <!--jcraft-->
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.53</version>
        </dependency>
        <dependency>
            <groupId>de.odysseus.staxon</groupId>
            <artifactId>staxon</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- RocketMQ Java SDK -->
        <dependency>
            <groupId>com.cmos</groupId>
            <artifactId>cmos-msg</artifactId>
            <version>0.2.3-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>ngwfcontrol</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <!--<plugin>-->
            <!--<groupId>org.codehaus.mojo</groupId>-->
            <!--<artifactId>cobertura-maven-plugin</artifactId>-->
            <!--<version>2.6</version>-->
            <!--<configuration>-->
            <!--<formats>-->
            <!--<format>xml</format>-->
            <!--</formats>-->
            <!--<instrumentation>-->
            <!--<excludes>-->
            <!--<exclude>src/test/java/*</exclude>-->
            <!--</excludes>-->
            <!--</instrumentation>-->
            <!--</configuration>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.0.0</version>
                <configuration>
                    <contextPath>/ngwfcontrol</contextPath>
                    <scanIntervalSeconds>300</scanIntervalSeconds>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>28076</port>
                        </connector>
                    </connectors>
                </configuration>
            </plugin>

        </plugins>
    </build>
    <!-- 环境配置 -->
    <profiles>
        <profile>
            <!-- 开发环境-->
            <id>dev</id>
            <properties>
                <profiles.active>dev</profiles.active>
                <system.WF_URL>http://192.168.100.5:9099/workflow/flow/process/resource/</system.WF_URL>
                <spring-dubbo-consumer>classpath:spring/spring-dubbo-consumer-dev.xml</spring-dubbo-consumer>
                <spring-dubbo-provider>classpath:spring/spring-dubbo-provider-dev.xml</spring-dubbo-provider>
                <redis.properties>classpath:config/redis.properties</redis.properties>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>zztest</id>
            <build>
                <plugins>
                    <!-- 引入ant插件 -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <!-- 在compile阶段执行   maven-antrun-plugin 插件的run-->
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <!-- 拷贝file指定文件内容到tofile指定文件中     overwirte="ture"可覆盖tofile指定文件中内容 -->
                                    <target>
                                        <copy tofile="${basedir}/src/main/resources/config/redis.properties"
                                              file="${basedir}/src/main/resources/config/redis-zztest.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/config/system.properties"
                                              file="${basedir}/src/main/resources/config/system-zztest.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/config/basesr/basesrConfig.properties"
                                              file="${basedir}/src/main/resources/config/basesr/basesrConfig-zztest.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/csf.properties"
                                              file="${basedir}/src/main/resources/csf-zztest.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/log4x.properties"
                                              file="${basedir}/src/main/resources/log4x-zztest.properties"
                                              overwrite="true"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <spring-dubbo-consumer>classpath:spring/spring-dubbo-consumer-zztest.xml</spring-dubbo-consumer>
                <spring-dubbo-provider>classpath:spring/spring-dubbo-provider-zztest.xml</spring-dubbo-provider>
            </properties>
        </profile>
        <!-- 测试集成环境 -->
        <profile>
            <id>lytest</id>
            <build>
                <plugins>
                    <!-- 引入ant插件 -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <!-- 在compile阶段执行   maven-antrun-plugin 插件的run-->
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <!-- 拷贝file指定文件内容到tofile指定文件中     overwirte="ture"可覆盖tofile指定文件中内容 -->
                                    <target>
                                        <copy tofile="${basedir}/src/main/resources/config/redis.properties"
                                              file="${basedir}/src/main/resources/config/redis-lytest.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/config/system.properties"
                                              file="${basedir}/src/main/resources/config/system-lytest.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/config/basesr/basesrConfig.properties"
                                              file="${basedir}/src/main/resources/config/basesr/basesrConfig-lytest.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/csf.properties"
                                              file="${basedir}/src/main/resources/csf-lytest.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/log4x.properties"
                                              file="${basedir}/src/main/resources/log4x-lytest.properties"
                                              overwrite="true"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <spring-dubbo-consumer>classpath:spring/spring-dubbo-consumer-lytest.xml</spring-dubbo-consumer>
                <spring-dubbo-provider>classpath:spring/spring-dubbo-provider-lytest.xml</spring-dubbo-provider>
            </properties>
        </profile>

        <!-- 生产集成环境 -->
        <profile>
            <id>lyprd</id>
            <build>
                <plugins>
                    <!-- 引入ant插件 -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <!-- 在compile阶段执行   maven-antrun-plugin 插件的run-->
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <!-- 拷贝file指定文件内容到tofile指定文件中     overwirte="ture"可覆盖tofile指定文件中内容 -->
                                    <target>
                                        <copy tofile="${basedir}/src/main/resources/config/redis.properties"
                                              file="${basedir}/src/main/resources/config/redis-lyprd.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/config/system.properties"
                                              file="${basedir}/src/main/resources/config/system-lyprd.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/config/basesr/basesrConfig.properties"
                                              file="${basedir}/src/main/resources/config/basesr/basesrConfig-lyprd.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/csf.properties"
                                              file="${basedir}/src/main/resources/csf-lyprd.properties"
                                              overwrite="true"/>
                                        <copy tofile="${basedir}/src/main/resources/log4x.properties"
                                              file="${basedir}/src/main/resources/log4x-lyprd.properties"
                                              overwrite="true"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <spring-dubbo-consumer>classpath:spring/spring-dubbo-consumer-lyprd.xml</spring-dubbo-consumer>
                <spring-dubbo-provider>classpath:spring/spring-dubbo-provider-lyprd.xml</spring-dubbo-provider>
            </properties>
        </profile>
    </profiles>

</project>